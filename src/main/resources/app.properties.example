#--------------------------------------------#
# Senate Electronic Timesheets Configuration #
#--------------------------------------------#

# Runtime level (dev/test/prod)
runtime.level = dev

# --- Data Directory -------------------------------------------------

# Directory where ess data is stored that is not included in the webapp root
data.dir = /data/ess/

# Subdirectory where acknowledged documents are stored
# Used to determine fs location and request routing for ack docs.
data.ackdoc_subdir = ack_docs/

# Subdirectory where travel request attachments are stored.
data.travel.attachments.dir = travel_request_attachments/

# Subdirectory where Personnel Employee Compliance videos are stored
data.pecvid_subdir = pec_videos/

#Subdirectory where downloaded Personnel Employee Compliance pdfs are stored
data.pdf_subdir = pec_pdfs/

# --- Domain Configuration ----------------------------------------------------

# The domain url and context path that ess is hosted on (used for generating links)
# do not use a trailing slash
domain.url = http://localhost:8080

# --- Security Settings -------------------------------------------------------

# Set to true to enforce authentication. Otherwise you will be able to login as
# anyone if the profile is set to dev!
auth.enabled = true

# If auth is disabled, this password will be used to login as any user.
auth.master.pass =

# LDAP Configuration
# Ldap server url.  Include protocol(typically ldap://) and port(typically :389).
ldap.url =
# Ldap search base that includes all users
ldap.base =
# Distinguished name of an ldap user.  This dn will be used to make queries across all users
ldap.user.dn =
# Ldap password for the app's ldap user
ldap.user.pass =


# Number of bytes generated for XSRF token
xsrf.token.bytes = 128

# If enabled will restrict all users from departments outside of the specified whitelist
# (default: false)
restrict.department.enabled = false

# If departmental restriction is enabled,
# only the responsibility center heads listed below can use the application.
# Takes a comma separated list of resp center codes, short names, or full names.  Case insensitive.
# (example: STSBAC,Senate Technology Services)
restrict.department.whitelist =

# Allow these ip addresses to access the API without logging in.
auth.api.ip.whitelist = ^$

# --- Database Configuration --------------------------------------------------

# Local Postgres Database
db.local.driver = org.postgresql.Driver
db.local.type = postgresql:
db.local.host = localhost
db.local.name = ess
db.local.user =
db.local.pass =

# Remote Oracle Database
db.remote.driver = oracle.jdbc.OracleDriver
db.remote.type = oracle:thin:@
db.remote.host = nysdbdev
db.remote.name = dev
db.remote.user =
db.remote.pass =

# Oracle Schema Configuration

# The schema containing the read-only tables
master.schema =

# The schema containing read-write tables for timesheets
ts.schema =

# Postgres Schema Configuration

# Ess common schema
ess.schema = ess

# Supply's schema
supply.schema = supply

# Travel's schema
travel.schema = travel

# --- Mail Configuration ------------------------------------------------------

# Connection information for sending emails
# Hostname and port
mail.smtp.host =
mail.smtp.port =

# Enables AUTH command
mail.smtp.auth = true
# Enables connection attempts using STARTTLS authentication
mail.smtp.starttls.enable = true
# Enables connection attempts using SSL authentication
mail.smtp.ssl.enable = true
mail.smtp.ssl.protocols = TLSv1.2

# Username
mail.smtp.user =
# Password
mail.smtp.password =
# Email address that will appear in the from header
mail.smtp.from =

mail.debug = false

# If test mode is enabled, all mail addresses will be overridden,
# redirecting all mail to the configured address
mail.test.enabled = true
mail.test.address =

# --- Eh Cache Configuration --------------------------------------------------

# The amount of memory to allocate to Eh Cache for all heap based caches (MB).
# This value cannot exceed the maximum jvm heap size or the application will
# fail to startup. (Recommended: 1000)
cache.max.size = 1000

# Set to true if caches should be warmed when the application deploys, false
# otherwise.
cache.warm.onstartup = true

# Specific Cache Warming
# Set these to true/false to enable/disable startup warming for specific caches
# Warming will still be disabled for all caches if cache.warm.onstartup = false
cache.warm.onstartup.supervisors = true

# Holiday cache
cache.cron.holiday = 0 0 0 * * *

# Pay Period cache
cache.cron.period = 0 0 0 * * *

# Locations cache
cache.cron.location = 0 0 0 * * *

# Travel Mileage Rate cache
cache.cron.mileage.rate = 0 0 0 * * *

# GSA Data Cron
gsa.cron.data = 0 0 7 1,7,14,21,28 * *

# Delay (ms) during which the transactions cache is refreshed from the DB.
cache.poll.delay.transactions = 60000
# Delay (ms) during which the employee cache is refreshed from the DB.
cache.poll.delay.employees = 60000
# Delay (ms) during which the supervisor cache is refreshed from the DB.
cache.poll.delay.supervisors = 60000
# Delay (ms) during which the time records cache is refreshed from the DB.
cache.poll.delay.timerecords = 60000
# Delay (ms) during which the annual accrual record cache is refreshed from the DB.
cache.poll.delay.accruals = 60000


# --- URL Configuration -------------------------------------------------------

# The url path to be used for accessing resources (css/js)
resource.path = /assets/

# The directory in which the actual css/js subdirectories are contained
resource.location = /assets/

# Url Details

login.url = /login
login.success.url = /time/record/entry

# Sfms Report Base Url
sfms.report.base.url = http://nysasprd.nysenate.gov:7778/reports/rwservlet

# LegEthics Training URL
# A URL that points to the LegEthics training site.
legethics.url =
legethics.api.path =
legethics.key =

# --- PEC Data Import Config --------------------------------------------------

pec.import.harassment_2019_video_task_id =
pec.import.ethics_2018_video_task_id =
pec.import.ethics_2020_video_task_id =
pec.everfi.2020_harassment_task_id =
pec.2020_sexual_harassment_ack_task_id =
pec.import.ethics_2021_video_task_id =
pec.nysenate.seal =

# --- PEC Everfi Config --------------------------------------------------

# The client id and client secret needed for accessing the Everfi API.
pec.everfi.client.id =
pec.everfi.client.secret =
pec.everfi.bad.email.report.enabled = false

# --- Scheduling Configuration ------------------------------------------------

# Determines if the scheduled ensure all time records function will run
# (Default: false)
scheduler.timerecord.ensureall.enabled = false

# Cron expressions that dictate scheduling for scheduled services
# Format "{second} {minute} {hour} {day of month} {month} {day of week}"

# Determines when the function that checks/generates time records for all employees runs
# (Default every night at midnight: 0 0 0 * * *)
scheduler.timerecord.ensureall.cron = 0 0 0 * * *

# Determines if the supply SFMS synchronization process will run
scheduler.supply.sfms_synchronization.enabled = false

# Determines when to run the supply SFMS synchronization process
scheduler.supply.sfms_synchronization.cron = 0 0 0 * * *

# Updates travel application values taken from the web
scheduler.travel.scrape.cron = 0 0 2 * * *

#Determines if we should send out email alerts to every active employee with outstanding tasks or not on cron
#False by default but true on prod
scheduler.pec.notifs.enabled = false

#IF enabled will automatically udpate the DB with new ethics live codes and email the admins
pec.ethics-code.autogen = true

#Determines if any emails should be sent at all from the PEC Notification Service. This includes test mode.
all.pec.notifs.enabled = false

#Send out notifs every 2 weeks
scheduler.pec.notifs.cron = 0 0 8 1,15 * *

# Determines if scheduled polling of course completion records from moodle is enabled.
scheduler.moodle.sync.enabled = false

#Determines whether or not we automatically scrape from Everfi
scheduler.everfi.sync.enabled = false

#Default pull Moodle records every hour or so
scheduler.moodle.task.sync.cron = 0 30 * * * *

#Default of every hour on the top of the hour to pull Everfi records
scheduler.everfi.task.sync.cron = 0 0 * * * *

# Schedules when users are added to everfi / ids stored in the db
scheduler.everfi.user.update.cron = 0 0 23 * * *

# Schedules when the Department category label is updated. Should be done before users are updated
scheduler.everfi.category.update.cron = 0 0 22 * * *

# Determines if scheduled personnel task assignment is enabled.
scheduler.personnel_task.assignment.enabled = true

# The schedule for personnel task assigment. (Default every day at 1AM)
scheduler.personnel_task.assignment.cron = 0 0 3 * * *

# --- Timeout Configuration ---------------------------------------------------

#timeout in secs
timeout = 900

# --- Image Folder URL --------------------------------------------------------

#absolute path prefix for images
image.url = /assets/supply_photos

# --- Web Cache ---------------------------------------------------------------

# in secs, 0  = no cache
cache.frontend.expire = 60

# --- Project Version ---------------------------------------------------------

application.version=@project.version@

# --- Slack Configuration -----------------------------------------------------

# The webhook url used to send slack messages.  See Setup Instructions at https://nysstech.slack.com/services/3391217030
slack.webhook.url =

# Limit the number of lines output for slack notifications (default 5)
slack.notification.line.limit = 5

# --- Error Report EmailConfiguration -----------------------------------------------------
report.email =

#Supports comma separated emails
everfi.report.email =

#Supports comma separated emails
pec.code.admin.emails =

pec.test.mode = true

# --- Supply Configuration -----------------------------------------------------

# A comma separated list of emails that will receive a notification when new requisitions are submitted.
supply.requisition.notification.list =

# Comma separated list of commodity codes which do not need to be reconciled.
supply.reconciliation.ignore.list = E69, E710, E912, E1013, E1015, E1215

# --- Google Maps Configuration -------------------------------------------------------
google.maps.api.key =

# --- Travel Integration links --------------------------------------------------------
# GSA API base url
travel.gsa.api.url_base = https://api.gsa.gov/travel/perdiem/v2/rates/
travel.gsa.api.key =

# Url used to scrape IRS mileage rates
travel.irs.url = https://www.irs.gov/tax-professionals/standard-mileage-rates

# Sage API base url
sage.api.url = https://pubgeo.nysenate.gov/api/v2

# --- Senate Info -----------------------------------------------------------

# The senate helpline phone number
helpline.phone.number =
